// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// This script is a commented version of @everge and @KivancOzbilgic SUPERTREND script. 
// You can find the reference code here: https://www.tradingview.com/script/r6dAP7yi/#tc3873161
// © zeguela
//@version=4
strategy("ZEGUELA SUPERTREND", commission_value=0.07, commission_type=strategy.commission.percent, initial_capital=100, default_qty_value=90, default_qty_type=strategy.percent_of_equity, overlay=true, process_orders_on_close=true)

// Step 1. Script settings

// Input options
Periods = input(title="ATR Period", type=input.integer, defval=10)
src = input(hl2, title="Source")
Multiplier = input(title="ATR Multiplier", type=input.float, step=0.1, defval=3.0)
changeATR= input(title="Change ATR Calculation Method ?", type=input.bool, defval=true)
showsignals = input(title="Show Buy/Sell Signals ?", type=input.bool, defval=false)
highlighting = input(title="Highlighter On/Off ?", type=input.bool, defval=true)
barcoloring = input(title="Bar Coloring On/Off ?", type=input.bool, defval=true)

// Step 2. Calculate indicator values
atr2 = sma(tr, Periods)
atr= changeATR ? atr(Periods) : atr2
up=src-(Multiplier*atr)
up1 = nz(up[1],up)
up := close[1] > up1 ? max(up,up1) : up
dn=src+(Multiplier*atr)
dn1 = nz(dn[1], dn)
dn := close[1] < dn1 ? min(dn, dn1) : dn
trend = 1
trend := nz(trend[1], trend)
trend := trend == -1 and close > dn1 ? 1 : trend == 1 and close < up1 ? -1 : trend

// Step 3. Determine indicator signals
upPlot = plot(trend == 1 ? up : na, title="Up Trend", style=plot.style_linebr, linewidth=2, color=color.green)
buySignal = trend == 1 and trend[1] == -1
dnPlot = plot(trend == 1 ? na : dn, title="Down Trend", style=plot.style_linebr, linewidth=2, color=color.red)
sellSignal = trend == -1 and trend[1] == 1

longCondition = buySignal
shortCondition = sellSignal

// Step 4. Output indicator data
plotshape(buySignal ? up : na, title="UpTrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color=color.green, transp=0)
plotshape(buySignal and showsignals ? up : na, title="Buy", text="Buy", location=location.absolute, style=shape.labelup, size=size.tiny, color=color.green, textcolor=color.white, transp=0)

plotshape(sellSignal ? dn : na, title="DownTrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color=color.red, transp=0)
plotshape(sellSignal and showsignals ? dn : na, title="Sell", text="Sell", location=location.absolute, style=shape.labeldown, size=size.tiny, color=color.red, textcolor=color.white, transp=0)
mPlot = plot(ohlc4, title="", style=plot.style_circles, linewidth=0)
longFillColor = highlighting ? (trend == 1 ? color.green : color.white) : color.white
shortFillColor = highlighting ? (trend == -1 ? color.red : color.white) : color.white
fill(mPlot, upPlot, title="UpTrend Highligter", color=longFillColor)
fill(mPlot, dnPlot, title="DownTrend Highligter", color=shortFillColor)

//Calculate P&L results
posColor = color.new(color.green, 75)
negColor = color.new(color.red, 75)
dftColor = color.new(color.blue, 75)
posProfit= (strategy.position_size > 0) ? (close * 100 / strategy.position_avg_price - 100) : strategy.position_size < 0 ? (strategy.position_avg_price * 100 / close - 100) : 0.0
posDir   = (strategy.position_size  > 0) ? "long" : strategy.position_size < 0 ? "short" : "flat"
posCol   = (posProfit > 0) ? posColor : (posProfit < 0) ? negColor : dftColor

var label lb = na
label.delete(lb)
lb := label.new(bar_index, max(high, highest(4)[1]), textcolor=color.white,
   color=color.gray,
   text="Open Pos: "+ posDir +
      "\nPnL: "+tostring(posProfit, "#.##")+"%" +
      "\nPreço Médio: "+tostring(strategy.position_avg_price, "#.####") +
      "\nClose: "+tostring(close, "#.####"))

//Closed trades boxes
if longCondition
    var label lL = na
    lL := label.new(bar_index, max(high, highest(4)[1]), textcolor=color.white, yloc=yloc.abovebar, style=label.style_label_down,
       color=posCol,
       text="Closed Pos: "+ posDir +
          "\nPnL: "+tostring(posProfit, "#.##")+"%" +
          "\nEntry Price: "+tostring(strategy.position_avg_price, "#.####") +
          "\nClose Price: "+tostring(close, "#.####"))

if shortCondition
    var label lL = na
    lL := label.new(bar_index, max(high, highest(4)[1]), textcolor=color.white, yloc=yloc.belowbar, style=label.style_label_up,
       color=posCol,
       text="Closed Pos: "+ posDir +
          "\nPnL: "+tostring(posProfit, "#.##")+"%" +
          "\nEntry Price: "+tostring(strategy.position_avg_price, "#.####") +
          "\nClose Price: "+tostring(close, "#.####"))

// Step 5. Strategy setup

// Make input options that configure backtest date range
FromDay   = input(defval = 1, title = "From Day", minval = 1, maxval = 31)
FromMonth = input(defval = 7, title = "From Month", minval = 1, maxval = 12)
FromYear  = input(defval = 2019, title = "From Year", minval = 999)
ToMonth   = input(defval = 1, title = "To Month", minval = 1, maxval = 12)
ToDay     = input(defval = 1, title = "To Day", minval = 1, maxval = 31)
ToYear    = input(defval = 9999, title = "To Year", minval = 999)
start     = timestamp(FromYear, FromMonth, FromDay, 00, 00)  
finish    = timestamp(ToYear, ToMonth, ToDay, 23, 59)       
window()  => time >= start and time <= finish ? true : false

//Alert configuration 
alertMessageOpenLong="put you message here"

alertMessageOpenShort="put you message here"

// Step 7. Strategy Execution
if (longCondition)
    strategy.entry("LONG", strategy.long, when = window(), comment = "OPEN LONG", alert_message=alertMessageOpenLong)

if (shortCondition)
    strategy.entry("SELL", strategy.short, when = window(), comment = "OPEN SHORT", alert_message=alertMessageOpenShort)
buy1= barssince(buySignal)
sell1 = barssince(sellSignal)
color1 = buy1[1] < sell1[1] ? color.green : buy1[1] > sell1[1] ? color.red : na
barcolor(barcoloring ? color1 : na)

// Exit open market position when date range ends
if (not window())
    strategy.close_all()